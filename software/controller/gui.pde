/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void tareButton_click(GButton source, GEvent event) { //_CODE_:tareButton:443811:
  println("tareButton - GButton >> GEvent." + event + " @ " + millis());
  port.write("T\n");
} //_CODE_:tareButton:443811:

public void connectButton_click(GButton source, GEvent event) { //_CODE_:connectButton:611629:
  println("connectButton - GButton >> GEvent." + event + " @ " + millis());
  port.write("I/O TEST FROM MASTER\n");
} //_CODE_:connectButton:611629:

public void toggleRecord_click(GButton source, GEvent event) { //_CODE_:toggleRecord:561632:
  println("toggleRecord - GButton >> GEvent." + event + " @ " + millis());
  if (RECORDING) {
    port.write("S\n");
    RECORDING = false;
    toggleRecord.setText("Record");
  } else {
    PLOT_POINTS.setNPoints(0);
    RECORDING_START_TIME = java.lang.System.nanoTime();
    RECORDING = true;
    port.write("R\n");
    toggleRecord.setText("Stop");
  }
} //_CODE_:toggleRecord:561632:

public void resetButton_click(GButton source, GEvent event) { //_CODE_:resetButton:442131:
  println("resetButton - GButton >> GEvent." + event + " @ " + millis());
  PLOT_POINTS.setNPoints(0);
} //_CODE_:resetButton:442131:

public void saveButton_click(GButton source, GEvent event) { //_CODE_:saveButton:793988:
  println("saveButton - GButton >> GEvent." + event + " @ " + millis());
  String filename = new SimpleDateFormat("yyyy-MM-dd-HH-mm-ss'.txt'").format(new Date());
  PrintWriter output = createWriter("data/"+filename);
  for (int i = 0; i < PLOT_POINTS.getNPoints(); i++) {
    output.println(PLOT_POINTS.getX(i)+","+PLOT_POINTS.getY(i));
  }
  output.flush();
  output.close();
} //_CODE_:saveButton:793988:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  tareButton = new GButton(this, 20, 120, 80, 30);
  tareButton.setText("Tare");
  tareButton.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  tareButton.addEventHandler(this, "tareButton_click");
  title = new GLabel(this, 20, 10, 250, 20);
  title.setText("HIAERO Thrust Bench Mark I Controller");
  title.setOpaque(false);
  connectButton = new GButton(this, 20, 40, 80, 30);
  connectButton.setText("Connect");
  connectButton.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  connectButton.addEventHandler(this, "connectButton_click");
  toggleRecord = new GButton(this, 20, 160, 80, 30);
  toggleRecord.setText("Record");
  toggleRecord.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  toggleRecord.addEventHandler(this, "toggleRecord_click");
  resetButton = new GButton(this, 20, 80, 80, 30);
  resetButton.setText("Reset");
  resetButton.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  resetButton.addEventHandler(this, "resetButton_click");
  saveButton = new GButton(this, 20, 200, 80, 30);
  saveButton.setText("Save");
  saveButton.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  saveButton.addEventHandler(this, "saveButton_click");
  connectedLabel = new GLabel(this, 1100, 10, 80, 20);
  connectedLabel.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  connectedLabel.setText("CONNECTED");
  connectedLabel.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  connectedLabel.setOpaque(false);
  disconnectedLabel = new GLabel(this, 970, 10, 110, 20);
  disconnectedLabel.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  disconnectedLabel.setText("DISCONNECTED");
  disconnectedLabel.setLocalColorScheme(GCScheme.RED_SCHEME);
  disconnectedLabel.setOpaque(false);
}

// Variable declarations 
// autogenerated do not edit
GButton tareButton; 
GLabel title; 
GButton connectButton; 
GButton toggleRecord; 
GButton resetButton; 
GButton saveButton; 
GLabel connectedLabel; 
GLabel disconnectedLabel; 
